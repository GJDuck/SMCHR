REACH_1 /\ x4 <-> p3 = 0 /\ EDGE_1_6 -> REACH_6 /\ EDGE_1_5 -> REACH_5 /\ EDGE_1_6 -> x4 /\ EDGE_1_5 -> not x4 /\ REACH_1 -> (malloc(H_36,H_0,p2,16) /\ p3 = p2 /\ (EDGE_1_6 \/ EDGE_1_5)) /\ EDGE_1_6 -> eq(H_1,H_36) /\ REACH_6 -> EDGE_1_6 /\ REACH_6 -> (false /\ false) /\ EDGE_1_5 -> eq(H_2,H_36) /\ REACH_5 -> EDGE_1_5 /\ x9 <-> n > 0 /\ EDGE_5_11 -> REACH_11 /\ EDGE_5_10 -> REACH_10 /\ EDGE_5_11 -> x9 /\ EDGE_5_10 -> not x9 /\ REACH_5 -> (p7 = p3 + 0 + 0 /\ store(H_37,H_2,333,p7) /\ p8 = p3 + 0 + 1 /\ store(H_38,H_37,0,p8) /\ (EDGE_5_11 \/ EDGE_5_10)) /\ EDGE_5_11 -> eq(H_3,H_38) /\ REACH_11 -> EDGE_5_11 /\ x15 <-> p14 = 0 /\ EDGE_11_17 -> REACH_17 /\ EDGE_11_16 -> REACH_16 /\ EDGE_11_17 -> x15 /\ EDGE_11_16 -> not x15 /\ REACH_11 -> (x12 = n + -1 /\ malloc(H_39,H_3,p13,16) /\ p14 = p13 /\ (EDGE_11_17 \/ EDGE_11_16)) /\ EDGE_11_17 -> eq(H_4,H_39) /\ REACH_17 -> EDGE_11_17 /\ REACH_17 -> (false /\ false) /\ EDGE_11_16 -> eq(H_5,H_39) /\ REACH_16 -> EDGE_11_16 /\ EDGE_16_10 -> REACH_10 /\ REACH_16 -> (p18 = p14 + 0 + 0 /\ store(H_40,H_5,0,p18) /\ p19 = p14 + 0 + 1 /\ store(H_41,H_40,0,p19) /\ EDGE_16_10) /\ EDGE_16_10 -> eq(H_6,H_41) /\ EDGE_5_10 -> eq(H_6,H_38) /\ REACH_10 -> (EDGE_16_10 \/ EDGE_5_10) /\ EDGE_16_10 -> 's.0' = p14 /\ EDGE_5_10 -> 's.0' = 0 /\ EDGE_16_10 -> '.0' = x12 /\ EDGE_5_10 -> '.0' = n /\ x20 <-> '.0' > 0 /\ EDGE_10_22 -> REACH_22 /\ EDGE_10_21 -> REACH_21 /\ EDGE_10_22 -> x20 /\ EDGE_10_21 -> not x20 /\ REACH_10 -> (EDGE_10_22 \/ EDGE_10_21) /\ REACH_22 -> EDGE_10_22 /\ x26 <-> p25 = 0 /\ EDGE_22_28 -> REACH_28 /\ EDGE_22_27 -> REACH_27 /\ EDGE_22_28 -> x26 /\ EDGE_22_27 -> not x26 /\ REACH_22 -> (x23 = '.0' + -1 /\ malloc(H_42,H_6,p24,16) /\ p25 = p24 /\ (EDGE_22_28 \/ EDGE_22_27)) /\ EDGE_22_28 -> eq(H_8,H_42) /\ REACH_28 -> EDGE_22_28 /\ REACH_28 -> (false /\ false) /\ EDGE_22_27 -> eq(H_9,H_42) /\ REACH_27 -> EDGE_22_27 /\ EDGE_27_21 -> REACH_21 /\ REACH_27 -> (p29 = p25 + 0 + 0 /\ store(H_43,H_9,1,p29) /\ p30 = p25 + 0 + 1 /\ store(H_44,H_43,'s.0',p30) /\ EDGE_27_21) /\ EDGE_27_21 -> eq(H_10,H_44) /\ EDGE_10_21 -> eq(H_10,H_6) /\ REACH_21 -> (EDGE_27_21 \/ EDGE_10_21) /\ EDGE_27_21 -> 's.1' = p25 /\ EDGE_10_21 -> 's.1' = 's.0' /\ EDGE_27_21 -> '.1' = x23 /\ EDGE_10_21 -> '.1' = '.0' /\ x31 <-> '.1' > 0 /\ EDGE_21_33 -> REACH_33 /\ EDGE_21_32 -> REACH_32 /\ EDGE_21_33 -> x31 /\ EDGE_21_32 -> not x31 /\ REACH_21 -> (EDGE_21_33 \/ EDGE_21_32) /\ REACH_33 -> EDGE_21_33 /\ x37 <-> p36 = 0 /\ EDGE_33_39 -> REACH_39 /\ EDGE_33_38 -> REACH_38 /\ EDGE_33_39 -> x37 /\ EDGE_33_38 -> not x37 /\ REACH_33 -> (x34 = '.1' + -1 /\ malloc(H_45,H_10,p35,16) /\ p36 = p35 /\ (EDGE_33_39 \/ EDGE_33_38)) /\ EDGE_33_39 -> eq(H_12,H_45) /\ REACH_39 -> EDGE_33_39 /\ REACH_39 -> (false /\ false) /\ EDGE_33_38 -> eq(H_13,H_45) /\ REACH_38 -> EDGE_33_38 /\ EDGE_38_32 -> REACH_32 /\ REACH_38 -> (p40 = p36 + 0 + 0 /\ store(H_46,H_13,2,p40) /\ p41 = p36 + 0 + 1 /\ store(H_47,H_46,'s.1',p41) /\ EDGE_38_32) /\ EDGE_38_32 -> eq(H_14,H_47) /\ EDGE_21_32 -> eq(H_14,H_10) /\ REACH_32 -> (EDGE_38_32 \/ EDGE_21_32) /\ EDGE_38_32 -> 's.2' = p36 /\ EDGE_21_32 -> 's.2' = 's.1' /\ EDGE_38_32 -> '.2' = x34 /\ EDGE_21_32 -> '.2' = '.1' /\ x42 <-> '.2' > 0 /\ EDGE_32_44 -> REACH_44 /\ EDGE_32_43 -> REACH_43 /\ EDGE_32_44 -> x42 /\ EDGE_32_43 -> not x42 /\ REACH_32 -> (EDGE_32_44 \/ EDGE_32_43) /\ REACH_44 -> EDGE_32_44 /\ x48 <-> p47 = 0 /\ EDGE_44_50 -> REACH_50 /\ EDGE_44_49 -> REACH_49 /\ EDGE_44_50 -> x48 /\ EDGE_44_49 -> not x48 /\ REACH_44 -> (x45 = '.2' + -1 /\ malloc(H_48,H_14,p46,16) /\ p47 = p46 /\ (EDGE_44_50 \/ EDGE_44_49)) /\ EDGE_44_50 -> eq(H_16,H_48) /\ REACH_50 -> EDGE_44_50 /\ REACH_50 -> (false /\ false) /\ EDGE_44_49 -> eq(H_17,H_48) /\ REACH_49 -> EDGE_44_49 /\ EDGE_49_43 -> REACH_43 /\ REACH_49 -> (p51 = p47 + 0 + 0 /\ store(H_49,H_17,3,p51) /\ p52 = p47 + 0 + 1 /\ store(H_50,H_49,'s.2',p52) /\ EDGE_49_43) /\ EDGE_49_43 -> eq(H_18,H_50) /\ EDGE_32_43 -> eq(H_18,H_14) /\ REACH_43 -> (EDGE_49_43 \/ EDGE_32_43) /\ EDGE_49_43 -> 's.3' = p47 /\ EDGE_32_43 -> 's.3' = 's.2' /\ EDGE_49_43 -> '.3' = x45 /\ EDGE_32_43 -> '.3' = '.2' /\ x53 <-> '.3' > 0 /\ EDGE_43_55 -> REACH_55 /\ EDGE_43_54 -> REACH_54 /\ EDGE_43_55 -> x53 /\ EDGE_43_54 -> not x53 /\ REACH_43 -> (EDGE_43_55 \/ EDGE_43_54) /\ REACH_55 -> EDGE_43_55 /\ x59 <-> p58 = 0 /\ EDGE_55_61 -> REACH_61 /\ EDGE_55_60 -> REACH_60 /\ EDGE_55_61 -> x59 /\ EDGE_55_60 -> not x59 /\ REACH_55 -> (x56 = '.3' + -1 /\ malloc(H_51,H_18,p57,16) /\ p58 = p57 /\ (EDGE_55_61 \/ EDGE_55_60)) /\ EDGE_55_61 -> eq(H_20,H_51) /\ REACH_61 -> EDGE_55_61 /\ REACH_61 -> (false /\ false) /\ EDGE_55_60 -> eq(H_21,H_51) /\ REACH_60 -> EDGE_55_60 /\ EDGE_60_54 -> REACH_54 /\ REACH_60 -> (p62 = p58 + 0 + 0 /\ store(H_52,H_21,4,p62) /\ p63 = p58 + 0 + 1 /\ store(H_53,H_52,'s.3',p63) /\ EDGE_60_54) /\ EDGE_60_54 -> eq(H_22,H_53) /\ EDGE_43_54 -> eq(H_22,H_18) /\ REACH_54 -> (EDGE_60_54 \/ EDGE_43_54) /\ EDGE_60_54 -> 's.4' = p58 /\ EDGE_43_54 -> 's.4' = 's.3' /\ x64 <-> 's.4' != 0 /\ EDGE_54_66 -> REACH_66 /\ EDGE_54_65 -> REACH_65 /\ EDGE_54_66 -> x64 /\ EDGE_54_65 -> not x64 /\ REACH_54 -> (EDGE_54_66 \/ EDGE_54_65) /\ REACH_66 -> EDGE_54_66 /\ EDGE_66_65 -> REACH_65 /\ REACH_66 -> (p67 = 's.4' + 0 + 1 /\ load(H_22,p68,p67) /\ EDGE_66_65) /\ REACH_65 -> (EDGE_66_65 \/ EDGE_54_65) /\ EDGE_66_65 -> 's.5' = p68 /\ EDGE_54_65 -> 's.5' = 's.4' /\ x69 <-> 's.5' != 0 /\ EDGE_65_71 -> REACH_71 /\ EDGE_65_70 -> REACH_70 /\ EDGE_65_71 -> x69 /\ EDGE_65_70 -> not x69 /\ REACH_65 -> (EDGE_65_71 \/ EDGE_65_70) /\ REACH_71 -> EDGE_65_71 /\ EDGE_71_70 -> REACH_70 /\ REACH_71 -> (p72 = 's.5' + 0 + 1 /\ load(H_22,p73,p72) /\ EDGE_71_70) /\ REACH_70 -> (EDGE_71_70 \/ EDGE_65_70) /\ EDGE_71_70 -> 's.6' = p73 /\ EDGE_65_70 -> 's.6' = 's.5' /\ x74 <-> 's.6' != 0 /\ EDGE_70_76 -> REACH_76 /\ EDGE_70_75 -> REACH_75 /\ EDGE_70_76 -> x74 /\ EDGE_70_75 -> not x74 /\ REACH_70 -> (EDGE_70_76 \/ EDGE_70_75) /\ REACH_76 -> EDGE_70_76 /\ EDGE_76_75 -> REACH_75 /\ REACH_76 -> (p77 = 's.6' + 0 + 1 /\ load(H_22,p78,p77) /\ EDGE_76_75) /\ REACH_75 -> (EDGE_76_75 \/ EDGE_70_75) /\ EDGE_76_75 -> 's.7' = p78 /\ EDGE_70_75 -> 's.7' = 's.6' /\ x79 <-> 's.7' != 0 /\ EDGE_75_81 -> REACH_81 /\ EDGE_75_80 -> REACH_80 /\ EDGE_75_81 -> x79 /\ EDGE_75_80 -> not x79 /\ REACH_75 -> (EDGE_75_81 \/ EDGE_75_80) /\ REACH_81 -> EDGE_75_81 /\ EDGE_81_80 -> REACH_80 /\ REACH_81 -> (p82 = 's.7' + 0 + 1 /\ load(H_22,p83,p82) /\ EDGE_81_80) /\ REACH_80 -> (EDGE_81_80 \/ EDGE_75_80) /\ EDGE_81_80 -> 's.8' = p83 /\ EDGE_75_80 -> 's.8' = 's.7' /\ x84 <-> 's.8' != 0 /\ EDGE_80_86 -> REACH_86 /\ EDGE_80_85 -> REACH_85 /\ EDGE_80_86 -> x84 /\ EDGE_80_85 -> not x84 /\ REACH_80 -> (EDGE_80_86 \/ EDGE_80_85) /\ REACH_86 -> EDGE_80_86 /\ EDGE_86_85 -> REACH_85 /\ REACH_86 -> (p87 = 's.8' + 0 + 1 /\ load(H_22,p88,p87) /\ EDGE_86_85) /\ REACH_85 -> (EDGE_86_85 \/ EDGE_80_85) /\ x91 <-> x90 = 333 /\ EDGE_85_93 -> REACH_93 /\ EDGE_85_92 -> REACH_92 /\ EDGE_85_93 -> x91 /\ EDGE_85_92 -> not x91 /\ REACH_85 -> (p89 = p3 + 0 + 0 /\ load(H_22,x90,p89) /\ (EDGE_85_93 \/ EDGE_85_92)) /\ REACH_92 -> EDGE_85_92 /\ REACH_92 -> true /\ REACH_93 -> EDGE_85_93 /\ REACH_93 -> (false /\ false) /\ REACH_94 -> false
