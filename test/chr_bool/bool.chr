/*
 * Thom Fruehwirth ECRC 1991-1993
 * 910528 started boolean,and,or constraints
 * 910904 added xor,neg constraints
 * 911120 added imp constraint
 * 931110 ported to new release
 * 931111 added card constraint 
 * 961107 Christian Holzbaur, SICStus mods
 * 130317 Gregory J. Duck, SMCHR port
 *
 * Note: It is better to use the built-in SAT solver than this solver.
 */

int_eq_c(X, C) /\ int_eq_c(X, D) ==> C $!= D | false;

boolean(X) <=> X = 0 \/ X = 1;

/*
 * and/3 specification
 * and(0,0,0).
 * and(0,1,0).
 * and(1,0,0).
 * and(1,1,1).
 */

and(0,X,Y) <=> Y=0;
and(X,0,Y) <=> Y=0;
and(1,X,Y) <=> Y=X;
and(X,1,Y) <=> Y=X;
and(X,Y,1) <=> X=1 /\ Y=1;
and(X,X,Z) <=> X=Z;
// and(X,Y,X) <=> imp(X,Y);
// and(X,Y,Y) <=> imp(Y,X);
and(X,Y,A) /\ and(X,Y,B) ==> A=B;
and(X,Y,A) /\ and(Y,X,B) ==> A=B;

/*
 * or/3 specification
 * or(0,0,0).
 * or(0,1,1).
 * or(1,0,1).
 * or(1,1,1).
 */

or(0,X,Y) <=> Y=X;
or(X,0,Y) <=> Y=X;
or(X,Y,0) <=> X=0 /\ Y=0;
or(1,X,Y) <=> Y=1;
or(X,1,Y) <=> Y=1;
or(X,X,Z) <=> X=Z;
// or(X,Y,X) <=> imp(Y,X);
// or(X,Y,Y) <=> imp(X,Y);
or(X,Y,A) /\ or(X,Y,B) ==> A=B;
or(X,Y,A) /\ or(Y,X,B) ==> A=B;

/*
 * neg/2 specification
 * neg(0,1).
 * neg(1,0).
 */

neg(0,X) <=> X=1;
neg(X,0) <=> X=1;
neg(1,X) <=> X=0;
neg(X,1) <=> X=0;
neg(X,X) <=> false;
neg(X,Y) /\ neg(Y,Z) ==> X=Z;
neg(X,Y) /\ neg(Z,Y) ==> X=Z;	
neg(Y,X) /\ neg(Y,Z) ==> X=Z;	
// Interaction with other boolean constraints
neg(X,Y) \ and(X,Y,Z) <=> Z=0;
neg(Y,X) \ and(X,Y,Z) <=> Z=0;
neg(X,Z) /\ and(X,Y,Z) <=> X=1 /\ Y=0 /\ Z=0;
neg(Z,X) /\ and(X,Y,Z) <=> X=1 /\ Y=0 /\ Z=0;
neg(Y,Z) /\ and(X,Y,Z) <=> X=0 /\ Y=1 /\ Z=0;
neg(Z,Y) /\ and(X,Y,Z) <=> X=0 /\ Y=1 /\ Z=0;
neg(X,Y) \ or(X,Y,Z) <=> Z=1;
neg(Y,X) \ or(X,Y,Z) <=> Z=1;
neg(X,Z) /\ or(X,Y,Z) <=> X=0 /\ Y=1 /\ Z=1;
neg(Z,X) /\ or(X,Y,Z) <=> X=0 /\ Y=1 /\ Z=1;
neg(Y,Z) /\ or(X,Y,Z) <=> X=1 /\ Y=0 /\ Z=1;
neg(Z,Y) /\ or(X,Y,Z) <=> X=1 /\ Y=0 /\ Z=1;
neg(X,Y) /\ imp(X,Y) <=> X=0 /\ Y=1;
neg(Y,X) /\ imp(X,Y) <=> X=0 /\ Y=1;

/*
 *  imp/2 specification (implication)
 * imp(0,0).
 * imp(0,1).
 * imp(1,1).
 */

imp(0,X) <=> true;
imp(X,0) <=> X=0;
imp(1,X) <=> X=1;
imp(X,1) <=> true;
imp(X,X) <=> true;
imp(X,Y) /\ imp(Y,X) <=> X=Y;

