REACH_8 /\ x10 <-> x9 > 0 /\ EDGE_8_12 -> REACH_12 /\ EDGE_8_11 -> REACH_11 /\ EDGE_8_12 -> x10 /\ EDGE_8_11 -> not x10 /\ REACH_8 -> (EDGE_8_12 \/ EDGE_8_11) /\ REACH_12 -> EDGE_8_12 /\ EDGE_12_14 -> REACH_14 /\ REACH_12 -> (x13 = x9 + 1 /\ EDGE_12_14) /\ REACH_11 -> EDGE_8_11 /\ x15 <-> 1 <= x9 /\ EDGE_11_16 -> REACH_16 /\ 'EDGE_11_foo.exit' -> 'REACH_foo.exit' /\ EDGE_11_16 -> x15 /\ 'EDGE_11_foo.exit' -> not x15 /\ REACH_11 -> (EDGE_11_16 \/ 'EDGE_11_foo.exit') /\ REACH_16 -> EDGE_11_16 /\ 'EDGE_16_foo.exit' -> 'REACH_foo.exit' /\ REACH_16 -> 'EDGE_16_foo.exit' /\ 'REACH_foo.exit' -> ('EDGE_16_foo.exit' \/ 'EDGE_11_foo.exit') /\ 'EDGE_16_foo.exit' -> 'sum.0.i' = 1 /\ 'EDGE_11_foo.exit' -> 'sum.0.i' = 0 /\ 'EDGE_foo.exit_14' -> REACH_14 /\ 'REACH_foo.exit' -> (x17 = 'sum.0.i' - 1 /\ x18 = 1 + 5 /\ 'EDGE_foo.exit_14') /\ REACH_14 -> ('EDGE_foo.exit_14' \/ EDGE_12_14) /\ EDGE_12_14 -> 'y.0' = x13 /\ 'EDGE_foo.exit_14' -> 'y.0' = x18 /\ x20 <-> x19 <= 0 /\ EDGE_14_22 -> REACH_22 /\ EDGE_14_21 -> REACH_21 /\ EDGE_14_22 -> x20 /\ EDGE_14_21 -> not x20 /\ REACH_14 -> (sys_call(H_11,H_3,x19,'y.0') /\ (EDGE_14_22 \/ EDGE_14_21)) /\ EDGE_14_22 -> eq(H_9,H_11) /\ REACH_22 -> EDGE_14_22 /\ REACH_22 -> true /\ EDGE_14_21 -> eq(H_10,H_11) /\ REACH_21 -> EDGE_14_21 /\ REACH_21 -> false
