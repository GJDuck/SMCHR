REACH_1 /\ x10 <-> x9 != 5 /\ EDGE_1_12 -> REACH_12 /\ EDGE_1_11 -> REACH_11 /\ EDGE_1_12 -> x10 /\ EDGE_1_11 -> not x10 /\ REACH_1 -> (alloca(H_5,H_0,a,1*4) /\ alloca(H_6,H_5,b,1*20) /\ malloc(H_7,H_6,p2,4) /\ p3 = p2 /\ p4 = a + 0 + 0 /\ store(H_8,H_7,5,p4) /\ p5 = b + 0 + 3 /\ p6 = p5 + 0 + 0 /\ store(H_9,H_8,50,p6) /\ p7 = p3 + 0 + 0 /\ store(H_10,H_9,500,p7) /\ p8 = a + 0 + 0 /\ load(H_10,x9,p8) /\ (EDGE_1_12 \/ EDGE_1_11)) /\ EDGE_1_11 -> eq(H_1,H_10) /\ REACH_11 -> EDGE_1_11 /\ x16 <-> x15 != 50 /\ EDGE_11_12 -> REACH_12 /\ EDGE_11_17 -> REACH_17 /\ EDGE_11_12 -> x16 /\ EDGE_11_17 -> not x16 /\ REACH_11 -> (p13 = b + 0 + 3 /\ p14 = p13 + 0 + 0 /\ load(H_1,x15,p14) /\ (EDGE_11_12 \/ EDGE_11_17)) /\ REACH_17 -> EDGE_11_17 /\ x20 <-> x19 != 500 /\ EDGE_17_12 -> REACH_12 /\ EDGE_17_21 -> REACH_21 /\ EDGE_17_12 -> x20 /\ EDGE_17_21 -> not x20 /\ REACH_17 -> (p18 = p3 + 0 + 0 /\ load(H_1,x19,p18) /\ (EDGE_17_12 \/ EDGE_17_21)) /\ EDGE_17_12 -> eq(H_3,H_1) /\ EDGE_11_12 -> eq(H_3,H_1) /\ EDGE_1_12 -> eq(H_3,H_10) /\ REACH_12 -> (EDGE_17_12 \/ EDGE_11_12 \/ EDGE_1_12) /\ REACH_12 -> true /\ REACH_21 -> EDGE_17_21 /\ REACH_21 -> false
